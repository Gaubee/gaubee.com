{"abortReason":"!undefined","_urlRewrite":null,"_urlRedirect":"!undefined","abortStatusCode":"!undefined","_abortCall":"!undefined","_pageContextInitIsPassedToClient":"!undefined","pageId":"/pages/article/@id","routeParams":{"id":"QT-uses-the-proxy-online-installation-method"},"data":{"article":{"metadata":{"layout":"layouts/article.njk","title":"QT使用代理在线安装的方法","date":"!Date:2016-03-22T20:49:56.000Z","updated":"!Date:2016-03-26T10:21:35.000Z","id":"QT-uses-the-proxy-online-installation-method","createdAt":"!Date:2016-03-22T20:49:56.000Z","updatedAt":"!Date:2016-03-26T10:21:35.000Z","tags":[]},"htmlContent":"<p>QT 离线安装包对于把 Android 编译和 MSVC 编译混在一起搞，非常麻烦。而官方给的 MaintenanceTool.exe 有问题，没法用来增加额外的安装包，所以就必须使用在线安装。</p>\n<p>而关于<a href=\"http://download.qt.io/online/qtsdkrepository/windows_x86/root/qt/Updates_orig.xml.mirrorlist\">在线安装</a>。官方给出的一个完整的包地址，里头的 URL 竟然是绝对路径而且还带 SHA1 校验了。</p>\n<p><img src=\"/img/qt-download-proxy/capture-1.png\" alt=\"\"></p>\n<p>所以如果你用第三方镜像，会导致解析下载下来的 XML 文件后最后还是由于绝对路径跑到官方的站点下下载，而如果你自己篡改 XML 文件转发到镜像站点，就会发现各种莫名奇妙的问题，什么插件、依赖找不到之类的。</p>\n<h2>解决办法：</h2>\n<p><strong>1.</strong> 修改系统 host 文件：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>127.0.0.1 download.qt.io</span></span></code></pre>\n<p><code>download.qt.io</code>这个域名不能在 XML 文件改变，那就把这个域名的控制器拿到手</p>\n<p><strong>2.</strong> 然后使用 nginx，加入配置：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    server{</span></span>\n<span class=\"line\"><span>        listen      80;</span></span>\n<span class=\"line\"><span>        server_name download.qt.io;</span></span>\n<span class=\"line\"><span>        location / {</span></span>\n<span class=\"line\"><span>            proxy_pass http://mirror.bit.edu.cn/qtproject/;</span></span>\n<span class=\"line\"><span>            proxy_set_header Upgrade $http_upgrade;</span></span>\n<span class=\"line\"><span>            proxy_set_header Connection \"upgrade\";</span></span>\n<span class=\"line\"><span>            proxy_set_header Cookie $http_cookie;</span></span>\n<span class=\"line\"><span>            proxy_set_header Host $host;</span></span>\n<span class=\"line\"><span>            proxy_set_header Referer $http_referer;</span></span>\n<span class=\"line\"><span>            proxy_set_header X-Remote-IP $remote_addr;</span></span>\n<span class=\"line\"><span>        }</span></span>\n<span class=\"line\"><span>    }</span></span></code></pre>\n<p>转发<code>download.qt.io</code>到所需的镜像站点。</p>\n<p><strong>3.</strong> 打开 QT 在线安装程序，自定义库地址：<code>http://download.qt.io/online/qtsdkrepository/windows_x86/root/qt/</code>\n官方的默认的是<code>https</code>协议，所以用<code>http</code>还是不同的，程序接受。</p>\n<p><strong>补充</strong>：在<strong>检索阶段</strong>，把 host 文件的 download.qt.io 给注释掉，否则可能会检索不通过，等检索通过后，开始进入下载页面了，再把 host 文件的 download.qt.io 的转发给开启起来。如果已经开始在下载了，那么那几个文件的数据包会因为走 qt 官方的镜像而速度很慢，不要慌，把网络关掉，qt 下载器会报错说连接断开，这时候再把网络连接上去，点击下载器的 retry 按钮，这时候重新解析 dns，就会开始走国内镜像的渠道了。</p>\n","markdownContent":"\nQT 离线安装包对于把 Android 编译和 MSVC 编译混在一起搞，非常麻烦。而官方给的 MaintenanceTool.exe 有问题，没法用来增加额外的安装包，所以就必须使用在线安装。\n\n而关于[在线安装](http://download.qt.io/online/qtsdkrepository/windows_x86/root/qt/Updates_orig.xml.mirrorlist)。官方给出的一个完整的包地址，里头的 URL 竟然是绝对路径而且还带 SHA1 校验了。\n\n![](/img/qt-download-proxy/capture-1.png)\n\n所以如果你用第三方镜像，会导致解析下载下来的 XML 文件后最后还是由于绝对路径跑到官方的站点下下载，而如果你自己篡改 XML 文件转发到镜像站点，就会发现各种莫名奇妙的问题，什么插件、依赖找不到之类的。\n\n## 解决办法：\n\n**1.** 修改系统 host 文件：\n\n```\n127.0.0.1 download.qt.io\n```\n\n`download.qt.io`这个域名不能在 XML 文件改变，那就把这个域名的控制器拿到手\n\n**2.** 然后使用 nginx，加入配置：\n\n```\n\n    server{\n        listen      80;\n        server_name download.qt.io;\n        location / {\n            proxy_pass http://mirror.bit.edu.cn/qtproject/;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"upgrade\";\n            proxy_set_header Cookie $http_cookie;\n            proxy_set_header Host $host;\n            proxy_set_header Referer $http_referer;\n            proxy_set_header X-Remote-IP $remote_addr;\n        }\n    }\n```\n\n转发`download.qt.io`到所需的镜像站点。\n\n**3.** 打开 QT 在线安装程序，自定义库地址：`http://download.qt.io/online/qtsdkrepository/windows_x86/root/qt/`\n官方的默认的是`https`协议，所以用`http`还是不同的，程序接受。\n\n**补充**：在**检索阶段**，把 host 文件的 download.qt.io 给注释掉，否则可能会检索不通过，等检索通过后，开始进入下载页面了，再把 host 文件的 download.qt.io 的转发给开启起来。如果已经开始在下载了，那么那几个文件的数据包会因为走 qt 官方的镜像而速度很慢，不要慌，把网络关掉，qt 下载器会报错说连接断开，这时候再把网络连接上去，点击下载器的 retry 按钮，这时候重新解析 dns，就会开始走国内镜像的渠道了。\n"}}}