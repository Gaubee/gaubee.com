{"abortReason":"!undefined","_urlRewrite":null,"_urlRedirect":"!undefined","abortStatusCode":"!undefined","_abortCall":"!undefined","_pageContextInitIsPassedToClient":"!undefined","pageId":"/pages/article/@id","routeParams":{"id":"Recommend-something-that-syncs-the-code-between-the-two-places"},"data":{"article":{"metadata":{"layout":"layouts/article.njk","title":"推荐一个同步两地代码的东西","date":"!Date:2016-10-13T21:31:14.000Z","updated":"!Date:2016-10-13T21:31:14.000Z","id":"Recommend-something-that-syncs-the-code-between-the-two-places","createdAt":"!Date:2016-10-13T21:31:14.000Z","updatedAt":"!Date:2016-10-13T21:31:14.000Z","tags":[]},"htmlContent":"<p>以前开发，是使用金山快盘，但是这软件停止了维护。后来就没用了。\n这个同步需求发生在最近写Typescript的时候，感觉本地编译很吃CPU，有时候浏览器开着运行Canvas就要吃掉我双核四线程60%+的CPU了，这时候再编译Typescript，搞得两边都很卡。\n所以就想着能不能用另外一台电脑单纯替代我本地的编译这一方面的工作。</p>\n<p>一开始的想法是自己写一个服务同步两台电脑的脚本，后来想想预感会踩很多坑，所以就果断放弃这个想法， Google搜不出我要的软件，就上Github搜索了以下，结果就找到了这个：<a href=\"https://github.com/syncthing/syncthing/\" target=\"_blank\">syncthing</a></p>\n<p>跑起来后试用感觉很不错，唯一的不满就是，它是以轮询的方式来查看文件变动。不过开源软件给出API，所以就写了一个nodejs脚本来自动触发同步选项。</p>\n<p>代码下面贴出，我默认是<strong>放在代码所在目录</strong>下：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-js\"><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// .syncthing.js</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> fs</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> require</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"fs\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> child_process</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> require</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"child_process\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> ignore_keys </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> [</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"/ace\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"/js/lib\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"/typings\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">]; </span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// 不参与监听的，注意这里不是目录，只是简单的字符串匹配，也就是说如果目录名有这个字符串的话就不监听。</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> watch_deep </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> 4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">; </span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// 监听的目录深度，int > 1。为了缩减代码所以就没有用fs的API</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> watch_dirs </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> [</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"./\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> ls_exec </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> \"ls -d .\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// 如果你的代码目录不深，或者需要监听所有的目录，可以直接用ls -R，不过你要自己编写代码处理输出的格式，这里不赘述（PS：我就是偷懒不想多写代码）</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">do</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    ls_exec </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> \"/*\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">    var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> dirs </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> child_process.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">execSync</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(ls_exec).</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">toString</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">().</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">split</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">'</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\n</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">'</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">).</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">filter</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">foldername</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =></span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">        if</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> (foldername) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">            if</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> (ignore_keys.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">some</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">ignore_key</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =></span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> foldername.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">indexOf</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(ignore_key) </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">!==</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> -</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">                return</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">            }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">            return</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> fs.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">lstatSync</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(foldername).</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">isDirectory</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    });</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    watch_dirs </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> watch_dirs.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">concat</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(dirs);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">} </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">while</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> (watch_deep </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">-=</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">log</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">`监听以下目录：</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\n</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">  ${</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">watch_dirs</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">join</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\n</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">  \"</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">).</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">trim</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">()</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">}`</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> syncthing_exec_server</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> `curl -X POST -H \"X-API-Key:Tqp***********到设置中找******und\" http://[服务端或者局域网IP，记得到设置中设置]:8384/rest/db/scan?folder=[文件夹 ID]`</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> syncthing_exec_client</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> `curl -X POST -H \"X-API-Key:E5x***********到设置中找*****7o5J\" http://localhost:8384/rest/db/scan?folder=[文件夹 ID]`</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> is_server </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> process.argv[</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">||</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> \"\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">if</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> (is_server.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">toLowerCase</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">()[</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">===</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> \"s\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    console.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">log</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"启用服务端同步指令\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">    var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> syncthing_exec </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> syncthing_exec_server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">} </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">else</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    console.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">log</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"启用客户端同步指令\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    syncthing_exec </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> syncthing_exec_client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">watch_dirs.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">forEach</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">dir</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =></span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    fs.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">watch</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(dir, (</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">event</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">filename</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=></span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">        console.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">log</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(event, filename);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">        child_process.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">execSync</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(syncthing_exec);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    });</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">});</span></span></code></pre>\n<hr>\n<p>准备工作做好后就可以，剩下要做的就是：\n1, 开启_客户端_和_编译端_的syncthing\n2. 运行上面的代码：<code>node .syncthing.js</code>\n3. 编译端启动编译：运行<code>tsc -w -p .</code>。或者你可以执行自己的sass编译等等类似的烧CPU工作。</p>\n","markdownContent":"\n以前开发，是使用金山快盘，但是这软件停止了维护。后来就没用了。\n这个同步需求发生在最近写Typescript的时候，感觉本地编译很吃CPU，有时候浏览器开着运行Canvas就要吃掉我双核四线程60%+的CPU了，这时候再编译Typescript，搞得两边都很卡。\n所以就想着能不能用另外一台电脑单纯替代我本地的编译这一方面的工作。\n\n一开始的想法是自己写一个服务同步两台电脑的脚本，后来想想预感会踩很多坑，所以就果断放弃这个想法， Google搜不出我要的软件，就上Github搜索了以下，结果就找到了这个：[syncthing](https://github.com/syncthing/syncthing/)\n\n跑起来后试用感觉很不错，唯一的不满就是，它是以轮询的方式来查看文件变动。不过开源软件给出API，所以就写了一个nodejs脚本来自动触发同步选项。\n\n代码下面贴出，我默认是**放在代码所在目录**下：\n\n``` js\n// .syncthing.js\nconst fs = require(\"fs\");\nconst child_process = require(\"child_process\");\nvar ignore_keys = [\"/ace\", \"/js/lib\", \"/typings\"]; // 不参与监听的，注意这里不是目录，只是简单的字符串匹配，也就是说如果目录名有这个字符串的话就不监听。\nvar watch_deep = 4; // 监听的目录深度，int > 1。为了缩减代码所以就没有用fs的API\nvar watch_dirs = [\"./\"];\nvar ls_exec = \"ls -d .\";// 如果你的代码目录不深，或者需要监听所有的目录，可以直接用ls -R，不过你要自己编写代码处理输出的格式，这里不赘述（PS：我就是偷懒不想多写代码）\ndo {\n    ls_exec += \"/*\";\n    var dirs = child_process.execSync(ls_exec).toString().split('\\n').filter(foldername => {\n        if (foldername) {\n            if (ignore_keys.some(ignore_key => foldername.indexOf(ignore_key) !== -1)) {\n                return false\n            }\n            return fs.lstatSync(foldername).isDirectory();\n        }\n    });\n    watch_dirs = watch_dirs.concat(dirs);\n} while (watch_deep -= 1);\nconsole.log(`监听以下目录：\\n  ${watch_dirs.join(\"\\n  \").trim()}`);\n\nconst syncthing_exec_server = `curl -X POST -H \"X-API-Key:Tqp***********到设置中找******und\" http://[服务端或者局域网IP，记得到设置中设置]:8384/rest/db/scan?folder=[文件夹 ID]`;\nconst syncthing_exec_client = `curl -X POST -H \"X-API-Key:E5x***********到设置中找*****7o5J\" http://localhost:8384/rest/db/scan?folder=[文件夹 ID]`;\nvar is_server = process.argv[2] || \"\";\nif (is_server.toLowerCase()[0] === \"s\") {\n    console.log(\"启用服务端同步指令\");\n    var syncthing_exec = syncthing_exec_server\n} else {\n    console.log(\"启用客户端同步指令\");\n    syncthing_exec = syncthing_exec_client\n}\nwatch_dirs.forEach(dir => {\n    fs.watch(dir, (event, filename) => {\n        console.log(event, filename);\n        child_process.execSync(syncthing_exec);\n    });\n});\n```\n\n---\n\n准备工作做好后就可以，剩下要做的就是：\n1, 开启_客户端_和_编译端_的syncthing\n2. 运行上面的代码：`node .syncthing.js`\n3. 编译端启动编译：运行`tsc -w -p .`。或者你可以执行自己的sass编译等等类似的烧CPU工作。\n"}}}