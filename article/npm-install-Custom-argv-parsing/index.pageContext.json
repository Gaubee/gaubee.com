{"abortReason":"!undefined","_urlRewrite":null,"_urlRedirect":"!undefined","abortStatusCode":"!undefined","_abortCall":"!undefined","_pageContextInitIsPassedToClient":"!undefined","pageId":"/pages/article/@id","routeParams":{"id":"npm-install-Custom-argv-parsing"},"data":{"article":{"metadata":{"layout":"layouts/article.njk","title":"npm install自定义argv解析","date":"!Date:2016-02-28T08:50:18.000Z","updated":"!Date:2016-02-28T09:51:12.000Z","id":"npm-install-Custom-argv-parsing","createdAt":"!Date:2016-02-28T08:50:18.000Z","updatedAt":"!Date:2016-02-28T09:51:12.000Z","tags":[]},"htmlContent":"<h2>问题描述与解决的方向</h2>\n<p>问题来着一下这种需求出现的时候：</p>\n<p>一个包，要面对不同的用户：Client 与 Server。</p>\n<p>由于这个包中 Client 与 Server 共用部分代码，如果要拆分成 Client 包与 Server 包的话，那么就还要有一个公共 Common 包。</p>\n<p>所以要实现以下效果：</p>\n<p>默认为安装 Client 的包</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>npm install my_npm_pkg</span></span></code></pre>\n<p>增加<code>--server</code>参数为安装 Server 的包</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-text\"><span class=\"line\"><span>npm instal my_npm_pkg --server</span></span></code></pre>\n<h2>参考文档</h2>\n<p>在<a href=\"https://docs.npmjs.com/misc/scripts#environment\" target=\"_blank\">ENVIRONMENT</a>环节中有讲到 package.json 文件在 npm 命令运行的时候，相关的配置以及参数会被拍扁，变成环境变量。</p>\n<p><img src=\"/img/npm-install-with-argv/package-json-vars.png\" alt=\"image\"></p>\n<p>其中就包括这个字段：<code>npm_config_argv</code>\n这个是一个 JSON 数据，里面包含了<code>npm</code>指令执行时的参数：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-js\"><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> npm_argv</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> JSON</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">parse</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(process.env.npm_config_argv);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">npm_argv </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">instanceof</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> Array</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">; </span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">//true  [\"npm\", \"instal\", \"my_npm_pkg\", \"--server\"]</span></span></code></pre>\n<h2>DEMO 代码：</h2>\n<p><img src=\"/img/npm-install-with-argv/demo-capture-1.png\" alt=\"image\"></p>\n<p><img src=\"/img/npm-install-with-argv/demo-capture-2.png\" alt=\"image\"></p>\n<p><img src=\"/img/npm-install-with-argv/demo-capture-3.png\" alt=\"image\"></p>\n<h2>解决问题代码：</h2>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-js\"><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> exec</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> require</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"child_process\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">).exec;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> npm_argv</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> JSON</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">parse</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(process.env.npm_config_argv </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">||</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> \"{}\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">if</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> (</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">!</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(npm_argv </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">&#x26;&#x26;</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> npm_argv.original </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">instanceof</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> Array</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">  throw</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> TypeError</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"npm argv Error\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">); </span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// 异常的抛出会终止npm install命令</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">if</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> (npm_argv.original.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">indexOf</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"--server\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">!==</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> -</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">log</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"install dependencies: mongodb.\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">  const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> child</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> exec</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">`cd ${</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">__dirname</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">} &#x26;&#x26; npm install mongodb`</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">); </span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// 安装依赖</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  child.stdout.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">pipe</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(process.stdout);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  child.stderr.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">pipe</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(process.stderr);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span></code></pre>\n","markdownContent":"\n## 问题描述与解决的方向\n\n问题来着一下这种需求出现的时候：\n\n一个包，要面对不同的用户：Client 与 Server。\n\n由于这个包中 Client 与 Server 共用部分代码，如果要拆分成 Client 包与 Server 包的话，那么就还要有一个公共 Common 包。\n\n所以要实现以下效果：\n\n默认为安装 Client 的包\n\n```\nnpm install my_npm_pkg\n```\n\n增加`--server`参数为安装 Server 的包\n\n```\nnpm instal my_npm_pkg --server\n```\n\n## 参考文档\n\n在[ENVIRONMENT](https://docs.npmjs.com/misc/scripts#environment)环节中有讲到 package.json 文件在 npm 命令运行的时候，相关的配置以及参数会被拍扁，变成环境变量。\n\n![image](/img/npm-install-with-argv/package-json-vars.png)\n\n其中就包括这个字段：`npm_config_argv`\n这个是一个 JSON 数据，里面包含了`npm`指令执行时的参数：\n\n```js\nconst npm_argv = JSON.parse(process.env.npm_config_argv);\nnpm_argv instanceof Array; //true  [\"npm\", \"instal\", \"my_npm_pkg\", \"--server\"]\n```\n\n## DEMO 代码：\n\n![image](/img/npm-install-with-argv/demo-capture-1.png)\n\n![image](/img/npm-install-with-argv/demo-capture-2.png)\n\n![image](/img/npm-install-with-argv/demo-capture-3.png)\n\n## 解决问题代码：\n\n```js\nconst exec = require(\"child_process\").exec;\nconst npm_argv = JSON.parse(process.env.npm_config_argv || \"{}\");\nif (!(npm_argv && npm_argv.original instanceof Array)) {\n  throw TypeError(\"npm argv Error\"); // 异常的抛出会终止npm install命令\n}\nif (npm_argv.original.indexOf(\"--server\") !== -1) {\n  console.log(\"install dependencies: mongodb.\");\n  const child = exec(`cd ${__dirname} && npm install mongodb`); // 安装依赖\n  child.stdout.pipe(process.stdout);\n  child.stderr.pipe(process.stderr);\n}\n```\n"}}}