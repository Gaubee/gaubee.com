{"abortReason":"!undefined","_urlRewrite":null,"_urlRedirect":"!undefined","abortStatusCode":"!undefined","_abortCall":"!undefined","_pageContextInitIsPassedToClient":"!undefined","pageId":"/pages/article/@id","routeParams":{"id":"Implement-PIXI.js-Gauss-triangle-blur-using-WebGL-colorist-basics"},"data":{"article":{"metadata":{"layout":"layouts/article.njk","title":"使用WebGL作色器基础知识实现PIXI.js高斯三角模糊","date":"!Date:2016-05-03T12:12:09.000Z","updated":"!Date:2016-05-04T05:40:20.000Z","tags":["javascript"],"id":"Implement-PIXI.js-Gauss-triangle-blur-using-WebGL-colorist-basics","createdAt":"!Date:2016-05-03T12:12:09.000Z","updatedAt":"!Date:2016-05-04T05:40:20.000Z"},"htmlContent":"<p>官方给出的模糊滤镜效果不尽人意，所以就想自己写一个，顺带学习了一些 WebGL 的作色器相关的基础知识。\n说真的网上的文章讲得不是很乱，以下是我总结出来的。</p>\n<h2>WebGL 作色器</h2>\n<p>作色器的基本理念我不赘述。不了解的看下面猜测一下也能猜出个大概。\n这里从 PIXI.js 的源码中来看，用<a href=\"https://github.com/pixijs/pixi.js/blob/master/src/filters/blur/BlurXFilter.js\" target=\"_blank\">blurXFilter</a>为例，顶点作色器的代码如下：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-glsl\"><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">attribute</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aVertexPosition;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">attribute</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">attribute</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aColor;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">uniform</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> float</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">uniform</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> mat3</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> projectionMatrix;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">varying</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> vTextureCoord;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">varying</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> vColor;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">varying</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\"> vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">6</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">void</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> main</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">void</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_Position </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">((projectionMatrix </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec3</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">((aVertexPosition), </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">)).xy, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    vTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">-</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.012</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">-</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.008</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">-</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.004</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">3</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">( </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.004</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">( </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.008</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">5</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">( </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.012</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    vColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(aColor.rgb </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aColor.a, aColor.a);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span></code></pre>\n<p><strong>顶点作色器</strong>程序执行过程中需要数据，首先了解这三种数据：</p>\n<ol>\n<li>Attribute (从缓冲区对象中拉取数据)</li>\n<li>Uniform (在绘制过程中所有顶点都需要的、固定的数据值)</li>\n<li>Texture (像素/纹理元素数据)\n<strong>片元作色器</strong>也需要数据，也是三种获取方式：</li>\n<li>Uniform (在绘制过程中每个像素都需要的、固定的变量值)</li>\n<li>Texture (像素/纹理元素数据)</li>\n<li>Varying (从顶点着色器传递过来并且经过内插过程的数据)</li>\n</ol>\n<p>简单的站在我这个新手的角度来说，我是这样看的：\nattribute 是 PIXI 框架传入的数据，顶点作色器最终的计算数据是反应到<code>gl_Position</code>上面。\nuniform 是用户自己传入的数据。\nvarying 是定点作色器和片元作色器的共享的数据。</p>\n<p>所以对比<a href=\"https://github.com/pixijs/pixi.js/blob/039200b46d7840f065faa50739e4b98f69678db4/src/core/renderers/webgl/shaders/TextureShader.js#L74-L90\" target=\"_blank\">默认的顶点作色器代码 TextureShader</a>，可以看出有三行都是一样的：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-glsl\"><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">gl_Position</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">((projectionMatrix </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec3</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(aVertexPosition, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">)).xy, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">vTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">vColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(aColor.rgb </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aColor.a, aColor.a);</span></span></code></pre>\n<p>不管这三行，看其它部分：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-glsl\"><span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">-</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.012</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">-</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.008</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">-</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.004</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">3</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">( </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.004</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">( </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.008</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">    vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">5</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> aTextureCoord </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">( </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.012</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> *</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> strength, </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span></code></pre>\n<p>当我把 strength 值调整到 100 后，是这样的效果：</p>\n<p><img src=\"/img/pixi-webgl-gaussian-blur/strength-100.png\" alt=\"image\"></p>\n<p>我不得不诟病这个模糊效果（不然也不会有这篇文章了）。所以现在理解一下上面的代码：\n<code>vec2( X , Y)</code> 意味着一个偏移量，其中 Y=0，而<code>aTextureCoord</code>从命名理解就是<strong>纹理坐标</strong>，这里 j 把纹理贴图左右两边的数据拿了过来，在执行片元作色器的时候用上了：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-glsl\"><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">precision lowp </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">float</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">varying</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> vTextureCoord;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">varying</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec2</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\"> vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">6</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">varying</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> vColor;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">uniform</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> sampler2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> uSampler;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">void</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> main</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">void</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> vec4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> texture2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(uSampler, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">])</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.004431848411938341</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> texture2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(uSampler, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">])</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.05399096651318985</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> texture2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(uSampler, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">])</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.2419707245191454</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> texture2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(uSampler, vTextureCoord     )</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.3989422804014327</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> texture2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(uSampler, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">3</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">])</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.2419707245191454</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> texture2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(uSampler, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">4</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">])</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.05399096651318985</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    gl_FragColor </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">+=</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> texture2D</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(uSampler, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">vBlurTexCoords</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">[ </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">5</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">])</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0.004431848411938341</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span></code></pre>\n<p>可以看到实现方式就是把左右纹理贴图的数据以渐变的方式贴到一个点上，最终看到的就是上面效果图展示的多层贴图以不同透明度重叠的效果。PS: <code>vColor</code>这个参数我猜是遮罩或者透明通道</p>\n<h2>参考 glfx 实现高斯模糊</h2>\n<p>对比<a href=\"https://github.com/evanw/glfx.js/blob/master/src/filters/blur/triangleblur.js\" target=\"_blank\">triangleblur.js</a>。可以看出它的作色器代码其实是片元作色器代码，顶点作色器放空 null 使用默认。所以对比一下参数其实就好办了：\n其中<code>delta</code>这个参数都是用户传入的，剩下的只有<code>texture|texCoord</code>分别对应 PIXI.js 中的<code>uSampler|vTextureCoord</code>。</p>\n<p>所以代码关系对上后就好说了，接下来用 TypeScript 来实现 PIXI.js 中的高斯模糊滤镜。</p>\n<h2>PIXI.js 中高斯模糊的实现</h2>\n<p>参考官方写法，先搭建出大概的类架构：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">class</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> GaussianBlur</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> extends</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> PIXI</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">AbstractFilter</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#FFAB70\">  _delta</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">  constructor</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">    let</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> vert </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> \"\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">    let</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> frag </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> \"\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">    super</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(vert, frag, {});</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  applyFilter</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">renderer</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">input</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">output</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">clear</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">) {}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">  get</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> blur</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">    return</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> this</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">._delta;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">  set</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> blur</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#E36209;--shiki-dark:#FFAB70\">value</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">    this</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">._delta </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> value;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">export</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> default</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> GaussianBlur;</span></span></code></pre>\n<p>然后就是要传入作色器代码了:</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> randomShaderFunc </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">  \"</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    float random(vec3 scale, float seed) {</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        /* use the fragment position for a different seed per-pixel */</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    }</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">let</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> vert </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> `attribute vec2 aVertexPosition;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">attribute vec2 aTextureCoord;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">attribute vec4 aColor;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">uniform vec2 delta;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">uniform mat3 projectionMatrix;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">varying vec2 vTextureCoord;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">varying vec4 vColor;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">varying vec2 vDelta;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">void main(void)</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    vTextureCoord = aTextureCoord;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    vDelta = delta;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    vColor = vec4(aColor.rgb * aColor.a, aColor.a);</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">}`</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">let</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> frag </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> `precision lowp float;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">varying vec2 vTextureCoord;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">varying vec2 vDelta;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">varying vec4 vColor;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">uniform sampler2D uSampler;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">${</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">randomShaderFunc</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">void main() {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    vec4 color = vec4(0.0);</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    float total = 0.0;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    /* randomize the lookup values to hide the fixed number of samples */</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    for (float t = -30.0; t &#x3C;= 30.0; t++) {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        float percent = (t + offset - 0.5) / 30.0;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        float weight = 1.0 - abs(percent);</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        vec4 sample = texture2D(uSampler, vTextureCoord + vDelta * percent);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        /* switch to pre-multiplied alpha to correctly blur transparent images */</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        sample.rgb *= sample.a;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        color += sample * weight;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">        total += weight;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    gl_FragColor = color / total;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    /* switch back from pre-multiplied alpha */</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">}`</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span></code></pre>\n<p>要注意的是，PIXI.js 的风格就是数据都是从顶点作色器那边传入的，所以 detal 参数就从顶点作色器那边进行赋值并在片元作色器那边使用。片元作色器那边基本就是把 glfx 的代码拷贝过来，然后把参数命名改成 PIXI 中的参数命名即可。要注意的是<code>precision lowp float;</code>这一句 glfx 没有，PIXI 中一定要加，好像是声明精度的问题，作为一个小白，暂时不理解，只是在做的过程中发现如果没有这句的话作色器编译的时候会报错。\n最终效果（blur=10）：</p>\n<p><img src=\"/img/pixi-webgl-gaussian-blur/blur-10.png\" alt=\"image\"></p>\n<p>还有一个要注意的问题就是这个滤镜要跑两次才行，就是 X\\Y 是分开来模糊的，如果一起的话，会变成斜方向的模糊。PIXI 中类似的实现参考<a href=\"https://github.com/pixijs/pixi.js/blob/master/src/filters/blur/BlurFilter.js\" target=\"_blank\">BlurFilter</a>，因为它也是 X、Y 两次模糊滤镜后的效果。以下是我 applyFilter 的代码：</p>\n<pre class=\"shiki shiki-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8\" tabindex=\"0\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> shader </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> this</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">getShader</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(renderer);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">var</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> renderTarget </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> renderer.filterManager.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">getRenderTarget</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">true</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">this</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">.uniforms.delta.value </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  x: </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">this</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">._delta </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">/</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> input.size.width,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  y: </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">};</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">renderer.filterManager.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">applyFilter</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(shader, input, renderTarget, clear);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">this</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">.uniforms.delta.value </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  x: </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">0</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  y: </span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">this</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">._delta </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">/</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> input.size.height,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">};</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">renderer.filterManager.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">applyFilter</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(shader, renderTarget, output, clear);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// 很重要，不加的话会引发内存泄漏</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">renderer.filterManager.</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">returnRenderTarget</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">(renderTarget);</span></span></code></pre>\n<hr>\n<p>最后贴出完整代码：\nTypescript、ES6 版本：<a href=\"https://gist.github.com/Gaubee/54aa14b5e06ef8c3f5c25e1964c89fab#file-gaussianblur-ts\" target=\"_blank\">Gaussianblur.ts</a>\nES5 版本：<a href=\"https://gist.github.com/Gaubee/54aa14b5e06ef8c3f5c25e1964c89fab#file-gaussianblur-js\" target=\"_blank\">Gaussianblur.js</a></p>\n","markdownContent":"\n官方给出的模糊滤镜效果不尽人意，所以就想自己写一个，顺带学习了一些 WebGL 的作色器相关的基础知识。\n说真的网上的文章讲得不是很乱，以下是我总结出来的。\n\n## WebGL 作色器\n\n作色器的基本理念我不赘述。不了解的看下面猜测一下也能猜出个大概。\n这里从 PIXI.js 的源码中来看，用[blurXFilter](https://github.com/pixijs/pixi.js/blob/master/src/filters/blur/BlurXFilter.js)为例，顶点作色器的代码如下：\n\n```glsl /vert\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform float strength;\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec2 vBlurTexCoords[6];\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n\n    vBlurTexCoords[ 0] = aTextureCoord + vec2(-0.012 * strength, 0.0);\n    vBlurTexCoords[ 1] = aTextureCoord + vec2(-0.008 * strength, 0.0);\n    vBlurTexCoords[ 2] = aTextureCoord + vec2(-0.004 * strength, 0.0);\n    vBlurTexCoords[ 3] = aTextureCoord + vec2( 0.004 * strength, 0.0);\n    vBlurTexCoords[ 4] = aTextureCoord + vec2( 0.008 * strength, 0.0);\n    vBlurTexCoords[ 5] = aTextureCoord + vec2( 0.012 * strength, 0.0);\n\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}\n```\n\n**顶点作色器**程序执行过程中需要数据，首先了解这三种数据：\n\n1. Attribute (从缓冲区对象中拉取数据)\n2. Uniform (在绘制过程中所有顶点都需要的、固定的数据值)\n3. Texture (像素/纹理元素数据)\n   **片元作色器**也需要数据，也是三种获取方式：\n4. Uniform (在绘制过程中每个像素都需要的、固定的变量值)\n5. Texture (像素/纹理元素数据)\n6. Varying (从顶点着色器传递过来并且经过内插过程的数据)\n\n简单的站在我这个新手的角度来说，我是这样看的：\nattribute 是 PIXI 框架传入的数据，顶点作色器最终的计算数据是反应到`gl_Position`上面。\nuniform 是用户自己传入的数据。\nvarying 是定点作色器和片元作色器的共享的数据。\n\n所以对比[默认的顶点作色器代码 TextureShader](https://github.com/pixijs/pixi.js/blob/039200b46d7840f065faa50739e4b98f69678db4/src/core/renderers/webgl/shaders/TextureShader.js#L74-L90)，可以看出有三行都是一样的：\n\n```glsl /vert\ngl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\nvTextureCoord = aTextureCoord;\nvColor = vec4(aColor.rgb * aColor.a, aColor.a);\n```\n\n不管这三行，看其它部分：\n\n```glsl /vert\n    vBlurTexCoords[ 0] = aTextureCoord + vec2(-0.012 * strength, 0.0);\n    vBlurTexCoords[ 1] = aTextureCoord + vec2(-0.008 * strength, 0.0);\n    vBlurTexCoords[ 2] = aTextureCoord + vec2(-0.004 * strength, 0.0);\n    vBlurTexCoords[ 3] = aTextureCoord + vec2( 0.004 * strength, 0.0);\n    vBlurTexCoords[ 4] = aTextureCoord + vec2( 0.008 * strength, 0.0);\n    vBlurTexCoords[ 5] = aTextureCoord + vec2( 0.012 * strength, 0.0);\n```\n\n当我把 strength 值调整到 100 后，是这样的效果：\n\n![image](/img/pixi-webgl-gaussian-blur/strength-100.png)\n\n我不得不诟病这个模糊效果（不然也不会有这篇文章了）。所以现在理解一下上面的代码：\n`vec2( X , Y)` 意味着一个偏移量，其中 Y=0，而`aTextureCoord`从命名理解就是**纹理坐标**，这里 j 把纹理贴图左右两边的数据拿了过来，在执行片元作色器的时候用上了：\n\n```glsl /frag\nprecision lowp float;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vBlurTexCoords[6];\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    gl_FragColor = vec4(0.0);\n\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 0])*0.004431848411938341;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 1])*0.05399096651318985;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 2])*0.2419707245191454;\n    gl_FragColor += texture2D(uSampler, vTextureCoord     )*0.3989422804014327;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 3])*0.2419707245191454;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 4])*0.05399096651318985;\n    gl_FragColor += texture2D(uSampler, vBlurTexCoords[ 5])*0.004431848411938341;\n}\n```\n\n可以看到实现方式就是把左右纹理贴图的数据以渐变的方式贴到一个点上，最终看到的就是上面效果图展示的多层贴图以不同透明度重叠的效果。PS: `vColor`这个参数我猜是遮罩或者透明通道\n\n## 参考 glfx 实现高斯模糊\n\n对比[triangleblur.js](https://github.com/evanw/glfx.js/blob/master/src/filters/blur/triangleblur.js)。可以看出它的作色器代码其实是片元作色器代码，顶点作色器放空 null 使用默认。所以对比一下参数其实就好办了：\n其中`delta`这个参数都是用户传入的，剩下的只有`texture|texCoord`分别对应 PIXI.js 中的`uSampler|vTextureCoord`。\n\n所以代码关系对上后就好说了，接下来用 TypeScript 来实现 PIXI.js 中的高斯模糊滤镜。\n\n## PIXI.js 中高斯模糊的实现\n\n参考官方写法，先搭建出大概的类架构：\n\n```typescript\nclass GaussianBlur extends PIXI.AbstractFilter {\n  _delta: number;\n  constructor() {\n    let vert = \"\";\n    let frag = \"\";\n    super(vert, frag, {});\n  }\n  applyFilter(renderer, input, output, clear) {}\n  get blur() {\n    return this._delta;\n  }\n  set blur(value) {\n    this._delta = value;\n  }\n}\nexport default GaussianBlur;\n```\n\n然后就是要传入作色器代码了:\n\n```typescript\nvar randomShaderFunc =\n  \"\\\n    float random(vec3 scale, float seed) {\\\n        /* use the fragment position for a different seed per-pixel */\\\n        return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\\n    }\\\n\";\nlet vert = `attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform vec2 delta;\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec2 vDelta;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n\n    vDelta = delta;\n\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a);\n}`;\nlet frag = `precision lowp float;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vDelta;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n${randomShaderFunc}\nvoid main() {\n    vec4 color = vec4(0.0);\n    float total = 0.0;\n\n    /* randomize the lookup values to hide the fixed number of samples */\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n    for (float t = -30.0; t <= 30.0; t++) {\n        float percent = (t + offset - 0.5) / 30.0;\n        float weight = 1.0 - abs(percent);\n        vec4 sample = texture2D(uSampler, vTextureCoord + vDelta * percent);\n\n        /* switch to pre-multiplied alpha to correctly blur transparent images */\n        sample.rgb *= sample.a;\n\n        color += sample * weight;\n        total += weight;\n    }\n\n    gl_FragColor = color / total;\n\n    /* switch back from pre-multiplied alpha */\n    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n}`;\n```\n\n要注意的是，PIXI.js 的风格就是数据都是从顶点作色器那边传入的，所以 detal 参数就从顶点作色器那边进行赋值并在片元作色器那边使用。片元作色器那边基本就是把 glfx 的代码拷贝过来，然后把参数命名改成 PIXI 中的参数命名即可。要注意的是`precision lowp float;`这一句 glfx 没有，PIXI 中一定要加，好像是声明精度的问题，作为一个小白，暂时不理解，只是在做的过程中发现如果没有这句的话作色器编译的时候会报错。\n最终效果（blur=10）：\n\n![image](/img/pixi-webgl-gaussian-blur/blur-10.png)\n\n还有一个要注意的问题就是这个滤镜要跑两次才行，就是 X\\Y 是分开来模糊的，如果一起的话，会变成斜方向的模糊。PIXI 中类似的实现参考[BlurFilter](https://github.com/pixijs/pixi.js/blob/master/src/filters/blur/BlurFilter.js)，因为它也是 X、Y 两次模糊滤镜后的效果。以下是我 applyFilter 的代码：\n\n```typescript\nvar shader = this.getShader(renderer);\nvar renderTarget = renderer.filterManager.getRenderTarget(true);\nthis.uniforms.delta.value = {\n  x: this._delta / input.size.width,\n  y: 0,\n};\nrenderer.filterManager.applyFilter(shader, input, renderTarget, clear);\n\nthis.uniforms.delta.value = {\n  x: 0,\n  y: this._delta / input.size.height,\n};\nrenderer.filterManager.applyFilter(shader, renderTarget, output, clear);\n\n// 很重要，不加的话会引发内存泄漏\nrenderer.filterManager.returnRenderTarget(renderTarget);\n```\n\n---\n\n最后贴出完整代码：\nTypescript、ES6 版本：[Gaussianblur.ts](https://gist.github.com/Gaubee/54aa14b5e06ef8c3f5c25e1964c89fab#file-gaussianblur-ts)\nES5 版本：[Gaussianblur.js](https://gist.github.com/Gaubee/54aa14b5e06ef8c3f5c25e1964c89fab#file-gaussianblur-js)\n"}}}