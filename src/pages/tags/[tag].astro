---
import { getCollection } from "astro:content";
import ContentLayout from "../../layouts/ContentLayout.astro";
import Card from "../../components/Card.tsx";

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  const events = await getCollection("events");
  const allPosts = [...articles, ...events];
  const allTags = [
    ...new Set(allPosts.flatMap((post) => post.data.tags || [])),
  ];

  return allTags.map((tag) => ({
    params: { tag },
    props: { allPosts }, // Pass allPosts to avoid re-fetching
  }));
}

const { tag } = Astro.params;
const { allPosts } = Astro.props;

const filteredPosts = allPosts.filter((post) =>
  post.data.tags?.includes(tag as string),
);
---

<ContentLayout title={`Tagged: ${tag}`}>
  <div class="border-b border-zinc-200 px-4 pb-4 dark:border-zinc-700">
    <h1 class="text-3xl font-bold">
      Tagged: <span class="text-sky-600 dark:text-sky-400">{tag}</span>
    </h1>
    <a
      href="/"
      class="mt-2 inline-block text-zinc-600 hover:underline dark:text-zinc-400"
      >&larr; Back to all posts</a
    >
  </div>

  <div
    class="mt-8 flex flex-col border-r border-l border-zinc-200 dark:border-zinc-700"
  >
    {
      filteredPosts.map((post) => (
        <Card
          client:visible
          href={`/${post.collection}/${post.id}/`}
          title={post.data.title || post.id}
          date={post.data.date.toISOString()}
          type={post.collection}
        />
      ))
    }
  </div>
</ContentLayout>
